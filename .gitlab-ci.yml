image: docker:stable

services:
  - docker:stable-dind

stages:
  - build-base
  - build-others

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  IMAGE_NAME: ${CI_REGISTRY_IMAGE}/${CI_BUILD_NAME}

before_script:
  - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}

release:
  stage: build-base
  script:
    - apk add jq curl
    - R_VERSION=$(curl -s "https://rversions.r-pkg.org/r-release" | jq -r '.[].version')
    - docker pull ${IMAGE_NAME} || true
    - docker build --cache-from ${IMAGE_NAME}
                   --tag ${IMAGE_NAME}
                   --build-arg R_VERSION=${R_VERSION} .
    - docker run ${IMAGE_NAME} R --version
    - docker tag ${IMAGE_NAME} ${IMAGE_NAME}:${R_VERSION}
    - docker tag ${IMAGE_NAME} ${IMAGE_NAME}:${R_VERSION:0:1}
    - docker push ${IMAGE_NAME}
    - docker push ${IMAGE_NAME}:${R_VERSION}
    - docker push ${IMAGE_NAME}:${R_VERSION:0:1}

oldrel:
  stage: build-base
  script:
    - apk add jq curl
    - R_VERSION=$(curl -s "https://rversions.r-pkg.org/r-oldrel" | jq -r '.[].version')
    - docker pull ${IMAGE_NAME} || true
    - docker build --cache-from ${IMAGE_NAME}
                   --tag ${IMAGE_NAME}
                   --build-arg R_VERSION=${R_VERSION} .
    - docker run ${IMAGE_NAME} R --version
    - docker tag ${IMAGE_NAME} ${IMAGE_NAME}:${R_VERSION}
    - docker tag ${IMAGE_NAME} ${IMAGE_NAME}:${R_VERSION:0:1}
    - docker push ${IMAGE_NAME}
    - docker push ${IMAGE_NAME}:${R_VERSION}
    - docker push ${IMAGE_NAME}:${R_VERSION:0:1}

devel:
  stage: build-base
  script:
    - docker build --tag ${IMAGE_NAME}
                   --build-arg R_VERSION=${CI_BUILD_NAME} .
    - docker run ${IMAGE_NAME} R --version
    - docker push ${IMAGE_NAME}

patched:
  stage: build-base
  script:
    - docker build --tag ${IMAGE_NAME}
                   --build-arg R_VERSION=${CI_BUILD_NAME} .
    - docker run ${IMAGE_NAME} R --version
    - docker push ${IMAGE_NAME}

tidyverse:
  stage: build-others
  dependencies:
    - release
  variables:
    APK_PKG: libxml2-dev libressl-dev sqlite-dev mariadb-dev postgresql-dev unixodbc-dev
    R_PKG: tidyverse RSQLite RMySQL RMariaDB RPostgreSQL odbc dbplyr data.table dtplyr
  script:
    - docker pull ${IMAGE_NAME} || true
    - docker build --cache-from ${IMAGE_NAME}
                   --tag ${IMAGE_NAME}
                   --build-arg APK_PKG="${APK_PKG}"
                   --build-arg R_PKG="${R_PKG}"
                   --file Dockerfile-rpkg .
    - docker run ${IMAGE_NAME} Rscript -e "packageVersion('${CI_BUILD_NAME}')"
    - docker push ${IMAGE_NAME}
